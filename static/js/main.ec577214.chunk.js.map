{"version":3,"sources":["App/logo.svg","reducers/todos.js","reducers/counter.js","actions/todos.js","reducers/visibilityFilter.js","reducers/index.js","store/index.js","components/Link.jsx","components/Footer.jsx","containers/FilterLinks.jsx","containers/AddTodo.jsx","components/Todo.jsx","components/TodoList.jsx","containers/VisibleTodoList.jsx","containers/Navigation.jsx","layouts/Todos.jsx","components/Modal.jsx","theme/index.js","App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","todos","state","action","type","id","text","completed","map","todo","INCREMENT","DECREMENT","initialState","count","isIncrementing","isDecrementing","nextTodoId","VisibilityFilters","visibilityFilter","filter","rootReducer","combineReducers","counter","middleware","createLogger","thunkMiddleware","composedEnhancers","compose","applyMiddleware","history","createBrowserHistory","store","createStore","Link","active","children","onClick","console","log","Button","color","variant","disabled","useStyles","makeStyles","theme","root","display","flex","flexDirection","alignItems","marginTop","spacing","marginBottom","padding","borderTopRightRadius","borderBottomRightRadius","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","buttonGroup","marginLeft","Footer","classes","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","className","Typography","component","gutterBottom","ButtonGroup","aria-label","connect","dispatch","setVisibilityFilter","useState","value","setValue","onSubmit","e","preventDefault","TextField","required","label","onChange","event","target","Todo","labelId","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","width","maxWidth","backgroundColor","palette","background","paper","paddingTop","paddingBottom","TodoList","toggleTodo","List","key","getVisibleTodos","t","Error","withRouter","props","push","TodoLayout","Paper","elevation","VisibleTodoList","Divider","FilterLinks","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","showModal","handleOpenModal","bind","handleCloseModal","this","setState","style","isOpen","contentLabel","ariaHideApp","shouldFocusAfterRender","React","Component","createMuiTheme","common","black","white","default","light","main","dark","contrastText","secondary","error","hint","HomePage","src","logo","alt","href","rel","App","ThemeProvider","CssBaseline","exact","path","from","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ec577214.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case 'TOGGLE_TODO':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED';\nexport const INCREMENT = 'counter/INCREMENT';\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED';\nexport const DECREMENT = 'counter/DECREMENT';\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true,\n      };\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing,\n      };\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true,\n      };\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const increment = () => {\n  return (dispatch) => {\n    dispatch({\n      type: INCREMENT_REQUESTED,\n    });\n\n    dispatch({\n      type: INCREMENT,\n    });\n  };\n};\n\nexport const incrementAsync = () => {\n  return (dispatch) => {\n    dispatch({\n      type: INCREMENT_REQUESTED,\n    });\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT,\n      });\n    }, 3000);\n  };\n};\n\nexport const decrement = () => {\n  return (dispatch) => {\n    dispatch({\n      type: DECREMENT_REQUESTED,\n    });\n\n    dispatch({\n      type: DECREMENT,\n    });\n  };\n};\n\nexport const decrementAsync = () => {\n  return (dispatch) => {\n    dispatch({\n      type: DECREMENT_REQUESTED,\n    });\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT,\n      });\n    }, 3000);\n  };\n};\n","let nextTodoId = 0;\nexport const addTodo = (text) => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text,\n});\n\nexport const setVisibilityFilter = (filter) => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const toggleTodo = (id) => ({\n  type: 'TOGGLE_TODO',\n  id,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n};\n","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\n\nimport todos from './todos';\nimport counter from './counter';\nimport visibilityFilter from './visibilityFilter';\n\nconst rootReducer = combineReducers({\n  counter,\n  todos,\n  visibilityFilter,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\nimport { createBrowserHistory } from 'history';\n\nconst loggerMiddleware = createLogger();\n\nconst enhancers = [];\nconst middleware = [thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(loggerMiddleware); //added logger;\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nexport const history = createBrowserHistory();\nexport const store = createStore(rootReducer, composedEnhancers);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nconst Link = ({ active, children, onClick }) => {\n  console.log(active);\n  return (\n    <Button color=\"secondary\" variant=\"outlined\" onClick={onClick} disabled={active}>\n      {children}\n    </Button>\n  );\n};\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Link;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Link from './Link';\nimport { VisibilityFilters } from '../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n    '& .MuiButton-outlinedSecondary:nth-of-type(1)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    '& .MuiButton-outlinedSecondary:nth-of-type(2)': {\n      borderRadius: 0,\n    },\n    '& .MuiButton-outlinedSecondary:last-child': {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n  },\n  buttonGroup: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst Footer = ({ onClick, visibilityFilter }) => {\n  const classes = useStyles();\n  const { SHOW_ALL, SHOW_ACTIVE, SHOW_COMPLETED } = VisibilityFilters;\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body1\" component=\"p\" gutterBottom color=\"primary\">\n        Show\n      </Typography>\n      <ButtonGroup\n        className={classes.buttonGroup}\n        color=\"secondary\"\n        variant=\"outlined\"\n        aria-label=\"outlined primary button group\"\n      >\n        <Link onClick={() => onClick(SHOW_ALL)} active={visibilityFilter === SHOW_ALL}>\n          All\n        </Link>\n        <Link onClick={() => onClick(SHOW_ACTIVE)} active={visibilityFilter === SHOW_ACTIVE}>\n          Active\n        </Link>\n        <Link onClick={() => onClick(SHOW_COMPLETED)} active={visibilityFilter === SHOW_COMPLETED}>\n          Completed\n        </Link>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Footer from '../components/Footer';\n\nconst mapStateToProps = (state) => ({\n  visibilityFilter: state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClick: (filter) => dispatch(setVisibilityFilter(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nconst AddTodo = ({ dispatch }) => {\n  const [value, setValue] = useState(null);\n\n  const handleOnChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTodo(value));\n    setValue(null);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"d-flex flex-row\">\n          <Typography variant=\"h1\" component=\"h2\" gutterBottom color=\"primary\">\n            todos\n          </Typography>\n        </div>\n        <div className=\"d-flex flex-column mx-2\">\n          <TextField\n            required\n            id=\"todo\"\n            label=\"What needs to be done?\"\n            value={value || ''}\n            onChange={handleOnChange}\n            className=\"my-2\"\n          />\n          <div className=\"my-2\">\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Add\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Todo = ({ onClick, completed, text }) => {\n  const labelId = `checkbox-list-label-${text}`;\n  return (\n    <ListItem role={undefined} dense button onClick={onClick}>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          checked={completed}\n          tabIndex={-1}\n          disableRipple\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </ListItemIcon>\n      <ListItemText id={labelId} primary={text} />\n    </ListItem>\n  );\n};\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Todo;\n\n// <li\n// onClick={onClick}\n// style={{\n//   textDecoration: completed ? 'line-through' : 'none',\n// }}\n// >\n// {text}\n// </li>\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nconst TodoList = ({ todos, toggleTodo }) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n      {todos.map((todo) => {\n        return (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            completed={todo.completed}\n            onClick={() => toggleTodo(todo.id)}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter((t) => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter((t) => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTodo: (id) => dispatch(toggleTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst Navigation = ({ history, ...props }) => {\n  console.log('all props', props);\n  const handleOnClick = () => {\n    history.push('/login');\n  };\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOnClick}>\n        Login Page\n      </Button>\n    </div>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FilterLinks from '../containers/FilterLinks';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleTodoList from '../containers/VisibleTodoList';\nimport Divider from '@material-ui/core/Divider';\nimport Navigation from '../containers/Navigation';\n\nconst TodoLayout = () => (\n  <div>\n    <AddTodo />\n    <Paper elevation={2}>\n      <VisibleTodoList />\n      <Divider />\n      <FilterLinks />\n      <Navigation />\n    </Paper>\n  </div>\n);\n\nexport default TodoLayout;\n","import React from 'react';\nimport ReactModal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-20%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleOpenModal}>Trigger Modal</button>\n        <ReactModal\n          style={customStyles}\n          isOpen={this.state.showModal}\n          contentLabel=\"Minimal Modal Example IPAD\"\n          ariaHideApp={\n            true\n            /* Boolean indicating if the appElement should be hidden */\n          }\n          shouldFocusAfterRender={\n            true\n            /* Boolean indicating if the modal should be focused after render. */\n          }\n        >\n          <button onClick={this.handleCloseModal}>Close Modal</button>\n          <div>I am a modal</div>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nconst props = {};\n\nexport default Modal;\n","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    background: {\n      paper: '#fff',\n      default: '#fafafa',\n    },\n    primary: {\n      light: 'rgba(51, 171, 159, 1)',\n      main: 'rgba(0, 150, 136, 1)',\n      dark: 'rgba(0, 105, 95, 1)',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: 'rgba(247, 51, 120, 1)',\n      main: 'rgba(245, 0, 87, 1)',\n      dark: 'rgba(171, 0, 60, 1)',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: 'rgba(244, 67, 54, 1)',\n      dark: 'rgba(211, 47, 47, 1)',\n      contrastText: '#fff',\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)',\n    },\n  },\n});\nconsole.log(theme);\nexport default theme;\n","import React from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { history } from '../store';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport logo from './logo.svg';\nimport './App.css';\nimport TodoLayout from '../layouts/Todos';\nimport Modal from '../components/Modal';\nimport theme from '../theme';\n\nconst HomePage = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n      <Modal />\n    </header>\n  </div>\n);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"jumbotron\">\n        <div className=\"container\">\n          <div className=\"col-md-8 offset-md-2\">\n            <Router history={history}>\n              <Switch>\n                <Route exact path=\"/\" component={TodoLayout} />\n                <Route path=\"/login\" component={HomePage} />\n                <Route path=\"/register\" component={HomePage} />\n                <Redirect from=\"*\" to=\"/\" />\n              </Switch>\n            </Router>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'core-js/es/set';\nimport 'core-js/es/map';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}